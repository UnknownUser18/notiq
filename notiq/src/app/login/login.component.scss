@use 'index' as i;

:host {
  @include i.flex(column, center, center);
  min-width: 100%;
}

div {
  @include i.flex($justify: space-between);
  position: relative;
  overflow: hidden;
  gap: i.$margin-xl;
  align-items: unset;
  border: i.$base-border var(--border-muted);
  border-radius: i.$border-radius-xl;
  background: var(--bg);
  transition: i.transition(background, i.$duration-lg);
  box-shadow: i.$shadow-xl;

  &::before {
    position: absolute;
    background: linear-gradient(45deg, var(--bg) 45%, var(--bg-light));
    transition: opacity 0.5s;
    opacity: 0;
    content: '';
    inset: 0;
    z-index: 0;
    pointer-events: none;
  }

  &:hover::before {
    opacity: 1;
  }

  > * {
    position: relative;
    z-index: 1;
  }
}

section {
  @include i.flex(column, center, end);
  padding: i.$padding-lg;
  gap: i.$margin-sm;
  border-radius: i.$border-radius-xl;
  background-color: var(--bg-light);
}

form {
  @include i.flex(column);
  margin: auto;
  padding: i.$padding-lg;
  gap: i.$margin-lg;
}


h1 {
  font-size: i.$font-size-2xl;
}

p {
  margin-bottom: i.$margin-lg;
  font-size: i.$font-size-xs;
  color: var(--text-muted);
}

label {
  @include i.flex(column);
  gap: i.$margin-2xs;

  &:last-of-type {
    @include i.flex(row, space-between, center);
    cursor: pointer;
  }

  &:focus-within span:not(.error) {
    color: var(--text);
  }

  .error {
    font-size: i.$font-size-xs;
    font-weight: 500;
    color: var(--danger);
  }

  span:not(.error) {
    font-size: i.$font-size-md;
    color: var(--text-muted);
    transition: i.transition(color);
  }

  input {
    padding: i.$padding-2xs;
    font-size: i.$font-size-sm;
    border: i.$base-border var(--bg-light);
    border-radius: i.$border-radius-lg;
    transition: i.transition(border-color);

    &:focus {
      border-color: var(--primary);
    }

    &[type="checkbox"] {
      position: relative;
      margin-right: i.$margin-xs;
      width: 1.2em;
      height: 1.2em;
      border: i.$base-border var(--border-muted);
      border-radius: i.$border-radius-sm;
      background: var(--bg-light);
      transition: i.transition(background), i.transition(border-color);
      appearance: none;

      &:checked {
        background: var(--primary);
        border-color: var(--primary);

        &::after {
          position: absolute;
          width: 0.3em;
          height: 0.6em;
          border: solid var(--bg);
          transform: rotate(45deg);
          content: '';
          left: 0.3em;
          top: 0.05em;
          border-width: 0 0.2em 0.2em 0;
          pointer-events: none;
        }
      }
    }
  }
}

button {
  @include i.flex($justify: center, $align: center);
  width: 100%;
  padding: i.$padding-2xs i.$padding-md;
  gap: i.$margin-2xs;
  cursor: pointer;
  font-size: i.$font-size-md;
  font-weight: 500;
  border-radius: i.$border-radius-lg;
  background-color: var(--primary);
  color: var(--bg);
  transition: i.transition(background-color);

  &:hover {
    background-color: var(--secondary);
  }
}

.spinner {
  position: relative;
  width: i.$font-size-md;
  height: i.$font-size-md;
  display: inline-block;
  animation: rotate 1s linear infinite;
}

.spinner::before {
  position: absolute;
  border: 2px solid var(--bg-light);
  border-radius: i.$border-radius-full;
  content: '';
  inset: 0;
  animation: prixClipFix 2s linear infinite alternate;
}

@keyframes rotate {
  100% {
    transform: rotate(360deg)
  }
}

@keyframes prixClipFix {
  0% {
    clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0)
  }
  25% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 0, 100% 0, 100% 0)
  }
  50% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 100% 100%, 100% 100%)
  }
  75% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 100%)
  }
  100% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 0)
  }
}

@keyframes spin {
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
